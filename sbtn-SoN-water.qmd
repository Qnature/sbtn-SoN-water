---
title: "SBTN State of Nature Water unified layers"
subtitle: "water availability and water pollution"
author: "Rafael Camargo"
date: "February 09, 2023"
engine: knitr
format:
  html:
    toc: true
execute:
  warning: false    
---

## Setup

Load required packages

```{r}
if (!require("pacman")) install.packages("pacman")
pacman::p_load("here", "dplyr", "magrittr", "sf", "raster", "exactextractr", "skimr", "readr")
```


## Load data

```{r}
my_lib <- "C:/Users/Rafael.Camargo/wwfgermany/FB-OuR-Daten - WRF/ws_gis/1_library" 
```


### Water Availability

#### Baseline water stress (Hofste et al. 2019)
```{r}
bws <- st_read(here(my_lib, "aqueduct30_V01_2019", "baseline", "annual", "arcmap", "y2019m07d12_aqueduct30_v01.gdb"),
               layer = "annual") %>%
  dplyr::select(bws_raw:bws_label, geometry = Shape)
```

#### Water depletion (Brauman et al. 2016)
```{r}
wdp <- raster(here(my_lib, "WaterDepletion_WaterGap3", "WaterDepletionCat_WG3.tif"))
```

#### Blue water scarcity (Mekonnen & Hoekstra 2016)
```{r}
wsb <- raster(here(my_lib, "BlueWaterScarcity", "WS_blue_monthly_rasters", "WSbl_monthly_30m", "ws_avg.tif"))
```


### Water Pollution

#### Coastal Eutrophication Potential (Hofste et al. 2019)
```{r}
cep <- st_read(here(my_lib, "aqueduct30_V01_2019", "baseline", "annual", "arcmap", "y2019m07d12_aqueduct30_v01.gdb"),
               layer = "annual") %>%
  dplyr::select(cep_raw:cep_label, geometry = Shape)
```

#### Water Quality Index (Damania et al. 2019)
```{r}
wqi <- raster(here(my_lib, "WorldBank_ML_Quality", "Risk_index_ML_6_4_19.tif"))
```

#### Global Water Quality Database / Global Nutrient Yields Dataset (McDowell et al. 2020)
```{r}
# wqd <- st_read(here(my_lib, "freshwater_nutrient_enrichment", "freshwater_nutrient_enrichment.gdb", layer = "?"))
```


### Aggregation unit

#### WMO Basins and Sub-Basins (GRDC 2020), only to add name of basins
```{r}
wmo_basins <- st_read(here(my_lib, "WMO_basins2020", "wmobb_basins.shp")) %>%
  dplyr::select(WMOBB_id = WMOBB, WMOBB_name = WMOBBName, region = REGNAME)
```

#### HydroSHEDS HydroBASINS Level 6 (Lehner & Grill 2013)
```{r}
sf::sf_use_s2(FALSE) # due to issues in HydroBASINS geometries

h6 <- st_read(here(my_lib, "hydrosheds", "hybas_lev06_v1c.shp")) %>%
  dplyr::select(HYBAS_ID) %>%
  mutate(HYBAS_ID = as.factor(HYBAS_ID)) %>%
  st_join(wmo_basins, largest = TRUE)
```

#### Export / Fast load
```{r}
# write_rds(h6, here("output", "h6.rds"))
h6 <- read_rds(here("output", "h6.rds"))
```


## Clean environment

```{r}
rm(my_lib, wmo_basins)
```


## Normalize data to 1-5 values

#### Baseline water stress
```{r}
bws_n <- bws %>%
  mutate(bws_n = if_else(bws_label == "Arid and Low Water Use", 5, bws_cat), .before = bws_label) %>%
  dplyr::select(bws_raw, bws_n, bws_label)
```

#### Water depletion
```{r}
# reclassification matrix
wdp_rcl <- matrix(
  c(
    0,NA,
    1,1, # <=5% annual depletion
    2,2, # >5–25% annual depletion
    5,3, # >25–75% annual depletion, Dry-Year
    6,4, # >25–75% annual depletion, Seasonal
    7,5, # >75–100% annual depletion
    8,5  # >100% annual depletion
  ),
  ncol=2, byrow=TRUE
)

# reclassify
wdp_n <- reclassify(wdp, wdp_rcl)

rm(wdp_rcl)
```

```{r}
wdp_n <- exact_extract(wdp_n, h6, fun = c("mean", "median", "quantile", "majority", "coefficient_of_variation"), quantiles = 0.75,
                       append_cols = "HYBAS_ID", progress = TRUE) 

skim(wdp_n)
```

```{r}
wdp_n <- wdp_n %>%
  mutate(
    wdp_raw = median,
    wdp_n = round(median),
    wdp_label = case_when(
      wdp_n == 1 ~ "<=5% annual depletion",
      wdp_n == 2 ~ ">5–25% annual depletion",
      wdp_n == 3 ~ ">25–75% annual depletion, Dry-Year",
      wdp_n == 4 ~ ">25–75% annual depletion, Seasonal",
      wdp_n == 5 ~ ">75% annual depletion"
    )
  ) %>%
  dplyr::select(HYBAS_ID, wdp_raw:wdp_label)
```


#### Blue water scarcity
```{r}
wsb_n <- exact_extract(wsb, h6, fun = c("mean", "median", "quantile", "majority", "coefficient_of_variation"), quantiles = 0.75,
                       append_cols = "HYBAS_ID", progress = TRUE)

skim(wsb_n)

filter(wsb_n, coefficient_of_variation > 1) %>% nrow()/nrow(wsb_n) # 28% of h6 basins show high variability
```

```{r}
wsb_n <- wsb_n %>%
  mutate(
    wsb_raw = median,
    wsb_n = case_when(
      median <= 0.2 ~ 1,
      between(median, 0.2, 1.0) ~ 2,
      between(median, 1.0, 2.0) ~ 3,
      between(median, 2.0, 5.0) ~ 4,
      median > 5.0 ~ 5
    ),
    wsb_label = case_when(
      wsb_n == 1 ~ "Very Low Blue Water Scarcity (<=0.2)",
      wsb_n == 2 ~ "Low Blue Water Scarcity (>0.2-1.0)",
      wsb_n == 3 ~ "Moderate Blue Water Scarcity (>1.0-2.0)",
      wsb_n == 4 ~ "Significant Blue Water Scarcity (>2.0-5.0)",
      wsb_n == 5 ~ "Severe Blue Water Scarcity (>5.0)"
    )
  ) %>%
  dplyr::select(HYBAS_ID, wsb_raw:wsb_label)
```

#### Export / Fast load
```{r}
# write_rds(bws_n, here("output", "bws_n.rds"))
# write_rds(wdp_n, here("output", "wdp_n.rds"))
# write_rds(wsb_n, here("output", "wsb_n.rds"))
```

```{r}
bws_n <- read_rds(here("output", "bws_n.rds"))
wdp_n <- read_rds(here("output", "wdp_n.rds"))
wsb_n <- read_rds(here("output", "wsb_n.rds"))
```


## Join datasets of Water Availability

```{r}
sf::sf_use_s2(FALSE) # due to issues in HydroBASINS geometries

son_wa <- h6 %>%
  st_join(bws_n, largest = TRUE) %>%
  left_join(wdp_n, by = "HYBAS_ID") %>%
  left_join(wsb_n, by = "HYBAS_ID")
```

```{r}
# write_rds(son_wa, here("output", "son_wa.rds"))
son_wa <- read_rds(here("output", "son_wa.rds"))
```

```{r}
son_wa %>%
  st_drop_geometry %>%
  skim()
```

### Calculate options of unified value
```{r}
son_wa <- son_wa %>%
  rowwise %>%
  mutate(
    wa_min = min(c(bws_n, wdp_n, wsb_n), na.rm = TRUE),
    wa_avg = mean(c(bws_n, wdp_n, wsb_n), na.rm = TRUE),
    wa_med = min(c(bws_n, wdp_n, wsb_n), na.rm = TRUE),
    wa_75q = quantile(c(bws_n, wdp_n, wsb_n), probs = 0.75, na.rm = TRUE),
    wa_max = max(c(bws_n, wdp_n, wsb_n), na.rm = TRUE),
    wa_diff = wa_max - wa_min,
    .before = geometry
  ) %>%
  ungroup() %>%
  mutate(n_nas = rowSums(is.na(dplyr::select(., all_of(c("bws_n", "wdp_n", "wsb_n"))))), .before = geometry)
```

### Explore the options
```{r}
son_wa %>%
  dplyr::select(bws_n, wdp_n, wsb_n, wa_min:n_nas) %>%
  st_drop_geometry %>%
  skim()
```

```{r}
son_wa %>%
  st_drop_geometry %>%
  group_by(wa_diff) %>%
  summarise(
    n = n(),
    perc = round(n/nrow(son_wa),3)
  ) %>%
  arrange(desc(n))
```

```{r}
son_wa %>%
  st_drop_geometry %>%
  group_by(n_nas) %>%
  summarise(
    n = n(),
    perc = round(n/nrow(son_wa),3)
  ) %>%
  arrange(desc(n))
```

```{r}
glimpse(son_wa)
```

### Export
```{r}
st_write(son_wa, here("output", "sbnt_son_water.shp"), layer_options = "ENCODING=UTF-8", delete_layer = TRUE)
```
